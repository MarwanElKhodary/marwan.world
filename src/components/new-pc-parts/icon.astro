---
import { parse } from 'node-html-parser';

export interface Props {
    pLabel: string;
    pLabelClass?: string;
}

function getSVG(name: string) {
    const filepath = `/src/svg/${name}.svg`;
    const files = import.meta.glob<string>('/src/svg/**/*.svg', {query: '?raw', import: 'default', eager: true});

    if (!(filepath in files)) {
        throw new Error (`${filepath} not found`);
    }

    const root = parse(files[filepath]);
    const svg = root.querySelector('svg');

    if (!svg) {
        throw new Error(`<svg> element not found in ${filepath}`);
    }
    
    const { attributes, innerHTML } = svg;

    return { attributes, innerHTML };
}

const { pLabel, pLabelClass, ...attributes } = Astro.props as Props;
const { attributes: baseAttributes, innerHTML } = getSVG(pLabel);

const svgAttributes = { 
    ...baseAttributes, 
    ...attributes,
    class:  `${baseAttributes.class || ''} ${pLabelClass || ''}`.trim()
};
---

<svg {...svgAttributes} set:html={innerHTML}></svg>